openapi: 3.0.0
info:
  title: Lisbon Time Tracking App API Documentation
  description: This API Endpoint documentation provides all the necessary information required for consuming the API
    endpoint of this project.
  version: 1.0.0
servers:
  - url: /
    description: 'Application API endpoint'
paths:
  /projects:
    get:
      tags:
        - projects
      summary: 'Endpoint for loading a list of projects'
      parameters:
        - in: query
          name: onlyNames
          schema:
            type: boolean
            default: false
            required: false
          description: 'If true response contains only project names and ids'
        - in: query
          name: page
          schema:
            type: integer
            default: 1
            required: false
          description: 'Page of the result query'
      responses:
        '200':
          description: 'If the user was successfully registered and an email for completing registration was send.'
          content:
            appliction/json:
              schema:
                type: object
                properties:
                  projects:
                    type: array
                    items:
                      $ref: '#components/schemas/SimpleProject'

    post:
      summary: 'Register new project'
      requestBody:
        description: All neccessary information for registering projects.
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProjectRegistrationRequest'
      responses:
        '200':
          description: 'If the project could be created successfully.'
          content:
            appliction/json:
              schema:
                $ref: '#components/schemas/ExtendedProject'
        '400':
          description: 'If the request was malformed, e.g. required information not provided.'
  # TODO Update and extend this API definition

/projects/{id}/tasks/{task-id}:
    get:
      tags:
        - tasks
        summary: 'Endpoint for loading a list of tasks'
        parameters:
          - in: query
            name: onlyNames
            schema:
              type: boolean
              default: false
              required: false
            description: 'If true response contains task id and task name'
      responses:
        '200':
          description: 'Task was sucessfully built'
          content:
            application/json:
              schema:
                type: object
                properties:
                  tasks:
                    type: array
    post:
      summary: 'New Task added'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                taskname:
                  type: string
                taskid:
                  type: string
      '201':
        description: 'Created'
      '400':
        description: 'Bad Request'

    patch:
      tags:
        - tasks
      summary: 'Exisiting Task updated'
      parameters:
        - name: onlyNames
          in: path
          required: true
          type: string
      responses:
        '200':
          description: 'Sucessful response'
        '400':
          description: 'Bad Request'

    delete:
      tags:
        - tasks
      summary: 'Delete existing Task'
      parameters:
        - name: id
          in: path
          description: ID of Task to delete
          required: true
          type: string
      responses:
        '204':
          description: task deleted
          default:
            description: unexpected error

/projects/{id}/start:
      get:
        tags:
          - tasks
          summary: 'Get Start time from Task'
          parameters:
            - name: Date
              in: path
              description: Starting Date of Task
              required: true
              type: string
          responses:
            '200':
              description: 'sucessfull response'
            '400':
              description: 'bad request'

      post:
        tags:
          - tasks
          summary: 'Post Start time from Task'
          parameters:
            -name: Date
            in: path
            required: true
            type: string
          responses:
            '200':
              description: 'sucessfull response'
            '400':
              description: 'bad request'


/projects/{id}/stop:
  get:
    tags:
      - tasks
      summary: 'Get Stop time from Task'
      parameters:
        - name: Date
          in: path
          required: true
          type: string
          responses:
            '200':
              description: 'sucessfull response'
            '400':
              description: 'bad request'

  post:
    tags:
      - tasks
      summary: 'Post Stop time from Task'
      parameters:
        - name: Date
          in: path
          required: true
          type: string
          responses:
            '200':
              description: 'sucessfull response'
            '400':
              description: 'bad request'


components:
  schemas:
    SimpleProject:
      type: object
      properties:
        id:
          type: string
          example: 'project-971na07sdnbap'
        name:
          type: string
          example: 'My very first project'
        color:
          type: string
          example: '#ffffff'
        completed:
          type: boolean
          nullable: true
    ExtendedProject:
      type: object
      properties:
        id:
          type: string
          example: 'project-971na07sdnbap'
        name:
          type: string
          example: 'My very first project'
        color:
          type: string
          example: '#ffffff'
        completed:
          type: boolean
          nullable: true
        tasks:
          type: array
          items:
            $ref: '#components/schemas/SimpleTask'
    SimpleTask:
      type: object
      properties:
        id:
          type: string

    ProjectRegistrationRequest:
      type: object
      properties:
        name:
          type: string
          required: true
        color:
          type: string
          example: '#ffffff'
          default: '#ffffff'
          required: false

#projects/id/tasks/{task-id}
    TaskRegistrationRequest:
      type: object
      properties:
        taskid:
          type: string
          example: 'task-1234'
        taskname:
          type: string
          example: 'aufgabe2ab'

#/projects/{id}/start
    TaskStart:
      type: Date
      properties:
        type: boolean
        example: 'false'

#/projects/{id}/start
    TaskStop:
      type: Date
      properties:
        type: boolean
        example: 'false'




